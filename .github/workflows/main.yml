name: CI devops 2025

on:
  # Déclenche le workflow sur push vers main et develop
  push:
    branches:
      - main
      - develop
  # Et aussi sur les pull requests
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-24.04
    steps:
      # Étape 1: Récupère le code du repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape 2: Configure JDK 21 pour Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      # Étape 3: Build et test avec Maven
      - name: Build and test with Maven
        run: mvn clean verify --file ./Java/pom.xml

      # Étape 4: Analyse de la qualité du code avec SonarCloud
     - name: SonarCloud Scan
          run: |
            mvn -B verify sonar:sonar \
              -Dsonar.projectKey=quentindhr_devops \
              -Dsonar.organization=quentindhr \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
              -Dsonar.branch.name=main \
              --file ./Java/pom.xml
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Job pour build et push des images Docker
  build-and-push-docker-image:
    needs: test-backend  # Attend que les tests et SonarCloud passent
    runs-on: ubuntu-24.04

    steps:
      # Étape 1: Récupère le code
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape 2: Login à Docker Hub
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      # Étape 3: Build et push l'image backend
      - name: Build image and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./Java  # Chemin vers le Dockerfile du backend
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops-backend:latest
          push: ${{ github.ref == 'refs/heads/main' }}  # Push seulement sur main

      # Étape 4: Build et push l'image database
      - name: Build image and push database
        uses: docker/build-push-action@v6
        with:
          context: ./Java/db  # Chemin vers le Dockerfile de la database
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}  # Push seulement sur main

      # Étape 5: Build et push l'image httpd
      - name: Build image and push httpd
        uses: docker/build-push-action@v6
        with:
          context: ./httpd  # Chemin vers le Dockerfile du reverse proxy
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops-httpd:latest
          push: ${{ github.ref == 'refs/heads/main' }}  # Push seulement sur main